# -*- coding: utf-8 -*-
import numpy as np
def Kernel_selector(band=3):
    '''
    :param band:
    kernelselection 1 M=2 K=4
    band 2 k=2
    band 3 k=2
    band 4 k=4
    band 5 k=4
    :return:
    '''
    kernelselection=band
    if kernelselection ==1:
        # Initialise wavelet kernel (here db-4)
        KI = [np.array([-0.010597401785069032, 0.0328830116668852, 0.030841381835560764, -0.18703481171909309,
                               -0.027983769416859854, 0.6308807679298589, 0.7148465705529157, 0.2303778133088965]),
                      np.array([-0.230377813308855,0.714846570552542,-0.630880767929590,-0.027983769416984,0.187034811718881,0.030841381835987,-0.032883011666983,-0.010597401784997])]
    elif kernelselection==2:
        KI = [np.array([-0.129409522550921, 0.224143868041857, 0.836516303737469, 0.482962913144690]),
                          np.array([-0.482962913144690, 0.836516303737469, -0.224143868041857, -0.129409522550921])]
    elif kernelselection == 4:
        KI = [np.array(
                [-0.0190928308000000, 0.0145382757000000, 0.0229906779000000, 0.0140770701000000, 0.0719795354000000,
                 -0.0827496793000000, -0.130694890900000, -0.0952930728000000, -0.114536126100000, 0.219030893900000,
                 0.414564773700000, 0.495502982800000, 0.561649421500000, 0.349180509700000, 0.193139439300000,
                 0.0857130200000000]),
                          np.array([-0.115281343300000, 0.0877812188000000, 0.138816305600000, 0.0849964877000000,
                                    -0.443703932000000, 0.169154971800000, 0.268493699200000, 0.0722022649000000,
                                    -0.0827398180000000, -0.426427736100000, -0.255040161600000, 0.600591382300000,
                                    -0.0115563891000000, -0.101106504400000, 0.118328206900000, -0.104508652500000]),
                          np.array([-0.0280987676000000, 0.0213958651000000, 0.0338351983000000, 0.0207171125000000,
                                    0.220295183000000, -0.208864350300000, -0.330053682700000, -0.224561804100000,
                                    0.556231311800000, -0.0621881917000000, 0.00102740000000000, 0.447749675200000,
                                    -0.248427727200000, -0.250343323000000, -0.204808915700000, 0.256095016300000]),
                          np.array([-0.0174753464000000, 0.0133066389000000, 0.0210429802000000, 0.0128845052000000,
                                    -0.0918374833000000, 0.0443561794000000, 0.0702950474000000, 0.0290655661000000,
                                    -0.0233349758000000, -0.0923899104000000, -0.0823301969000000, 0.0446493766000000,
                                    -0.137950244700000, 0.688008574600000, -0.662289313000000, 0.183998602200000]),
                          ]
    elif kernelselection == 3:  # 相位偏移
        KI = [np.array(
                [-0.145936007553990, 0.0465140821758900, 0.238964171905760, 0.723286276743610, 0.530836187013740,
                 0.338386097283860]),
                          np.array([0.426954037816980, -0.136082763487960, -0.699119564792890, -0.0187057473531300,
                                    0.544331053951810, -0.117377016134830]),
                          np.array([0.246502028665230, -0.0785674201318500, -0.403636868928920, 0.460604752521310,
                                    -0.628539361054710, 0.403636868928920]),
                          ]
    elif kernelselection == 5:
        KI= [np.array(
            [0.0272993452180114, 0.0265840663469593, 0, -0.0428593893779949, -0.0810269414612686, -0.117023723786349,
             -0.102653539494725, -2.73839349132101e-17, 0.165500189580178, 0.347337063987899, 0.478068455182483,
             0.509357208870298, 0.447213595499958, 0.315935108535685, 0.161069337685743, 0.0588695188858126,
             0.0139258597774260, 1.28985929088956e-32, 0.00863768676208944, 0.0198341352875850]),
                      np.array([0.0104274220026634, -0.0164298565616031, 0, 0.0264885593726670, -0.0309495376337566,
                                -0.189348362576392, -0.268750455462670, -2.73839349132101e-17, 0.433285121465458,
                                0.562003175085017, 0.182605900930553, -0.314800067496623, -0.447213595499958,
                                -0.195258635314441, 0.0615230124505194, 0.0952528824585986, 0.0364583742198662,
                                1.54826577665454e-31, 0.0226137575273252, 0.0320923050327763]),
                      np.array([0.0337438464306959, -5.13472509819086e-18, 0, -2.75943716886759e-18, -0.100154807655024,
                                -1.21909088566198e-17, 0.332193831935890, 8.21518047396304e-17, -0.535569863770559,
                                -1.80918635666264e-16, 0.590925108503860, 1.18092256227073e-15, -0.447213595499958,
                                4.07025734526344e-16, 0.199092650470447, -1.10450832039150e-16, -0.0450650288848805,
                                -1.80623763483245e-31, -0.0279521415304715, 2.89478922531347e-17]),
                      np.array([-0.0104274220026635, -0.0164298565616031, 0, 0.0264885593726670, 0.0309495376337565,
                                -0.189348362576392, 0.268750455462670, 8.21518047396304e-17, -0.433285121465458,
                                0.562003175085017, -0.182605900930552, -0.314800067496625, 0.447213595499958,
                                -0.195258635314440, -0.0615230124505196, 0.0952528824585985, -0.0364583742198662,
                                -1.97821887361772e-31, -0.0226137575273252, 0.0320923050327762]),
                      np.array([0.0272993452180114, -0.0265840663469593, 0, 0.0428593893779949, -0.0810269414612686,
                                0.117023723786349, -0.102653539494725, -1.36919674566051e-16, 0.165500189580178,
                                -0.347337063987900, 0.478068455182483, -0.509357208870298, 0.447213595499958,
                                -0.315935108535685, 0.161069337685743, -0.0588695188858126, 0.0139258597774258,
                                2.23619073179563e-31, 0.00863768676208948, -0.0198341352875852]),
                      ]
    else:
        raise Exception('other band not implement')
    return KI